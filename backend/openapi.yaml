openapi: 3.1.0
info:
  title: Bio SDK Service
  version: 1.0.0
tags:
  - name: user-related
    description: endpoints related to user
  - name: isssues-related
    description: endpoints related to issues
paths:
  # /api/gallery/get-images-dir:
  #   get:
  #     summary: get the current configured images directory
  #     operationId: getImagesDir
  #     description: images directory property within the SDKCore is returned
  #     tags:
  #       - images-dir
  #     responses:
  #       "200":
  #         description: Successful response
  #         content:
  #           text/plain:
  #             schema:
  #               type: string
  #     deprecated: false
  #     security: []
  /api/users/signup:
    post:
      summary: User signup
      operationId: userSignup
      description: Allows a new user to sign up
      tags:
        - user-related
      requestBody:
        description: Contains the information of new user
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/models.userSignupReqObj"
      responses:
        "200":
          description: Successful response
          content:
            text/plain:
              schema:
                type: string
        "500":
          description: Internal Server Error
          content:
            text/plain:
              schema:
                type: string
      deprecated: false
      security: []
  
  /api/users/login:
    post:
      summary: User login
      operationId: userLogin
      description: Allows an existing user to log in
      tags:
        - user-related
      requestBody:
        description: Contains the login credentials of the user
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/models.userLoginReqObj"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/models.userLoginResObj"
        "401":
          description: Unauthorized - Invalid credentials
          content:
            text/plain:
              schema:
                type: string
        "500":      
          description: Internal Server Error
          content:
            text/plain:
              schema:
                type: string
      deprecated: false
      security: []

  /api/users/remove-account:
    delete:
      summary: Remove user account
      operationId: removeUserAccount
      description: Allows a user to remove their account
      tags:
        - user-related
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User account removed successfully
        "401":
          description: Unauthorized - Invalid token
          content:
            text/plain:
              schema:
                type: string
                example: Unauthorized - Invalid token
        "500":
          description: Internal Server Error
          content:
            text/plain:
              schema:
                type: string
                example: Internal Server Error  
      security: 
        - BearerAuth: []

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    models.userSignUpReqObj:
      type: object
      properties:
        email:
          type: string
          format: email
          example: user@example.com
        password:
          type: string
          format: password
          example: strongpassword123
        nic:
          type: string
          example: 123456789V
        first_name:
          type: string
          example: John
        last_name:
          type: string
          example: Doe
        role:
          type: string
          enum: ["citizen", "gov_official", "admin"]
          example: citizen
    models.userSignupResObj:
      type: object
      properties:
        message:
          type: string
          example: User registered successfully
        userId:
          type: integer
          format: int64
          example: 12345
        token:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
    models.userLoginReqObj:
      type: object
      properties:
        email:
          type: string
          format: email
          example: user@example.com
        password:
          type: string
          format: password
          example: strongpassword123
    models.userLoginResObj:
      type: object
      properties:
        message:
          type: string
          example: User logged in successfully
        user_id:
          type: integer
          format: int64
          example: 12345
        token:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"

