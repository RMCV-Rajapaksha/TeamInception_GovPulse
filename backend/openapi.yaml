openapi: 3.1.0
info:
  title: Govpulse Backend Service
  version: 1.0.0
tags:
  - name: user-related
    description: endpoints related to user
  - name: issues-related
    description: endpoints related to issues

paths:
  /api/users/signup:
    post:
      summary: User signup
      operationId: userSignup
      description: Allows a new user to sign up
      tags:
        - user-related
      requestBody:
        description: Contains the information of new user
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/models.userSignupReqObj"
      responses:
        "200":
          description: Successful response
          content:
            text/plain:
              schema:
                type: string
        "500":
          description: Internal Server Error
          content:
            text/plain:
              schema:
                type: string
      deprecated: false
      security: []
  
  /api/users/login:
    post:
      summary: User login
      operationId: userLogin
      description: Allows an existing user to log in
      tags:
        - user-related
      requestBody:
        description: Contains the login credentials of the user
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/models.userLoginReqObj"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/models.userLoginResObj"
        "401":
          description: Unauthorized - Invalid credentials
          content:
            text/plain:
              schema:
                type: string
        "500":      
          description: Internal Server Error
          content:
            text/plain:
              schema:
                type: string
      deprecated: false
      security: []

  /api/users/remove-account:
    delete:
      summary: Remove user account
      operationId: removeUserAccount
      description: Allows a user to remove their account
      tags:
        - user-related
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User account removed successfully
        "401":
          description: Unauthorized - Invalid token
          content:
            text/plain:
              schema:
                type: string
                example: Unauthorized - Invalid token
        "500":
          description: Internal Server Error
          content:
            text/plain:
              schema:
                type: string
                example: Internal Server Error  
      deprecated: false
      security: 
        - BearerAuth: []
  /api/issues/create:
    post:
      summary: Create a new issue
      operationId: createIssue
      description: Allows a user to create a new issue
      tags:
        - issues-related
      requestBody:
        description: Contains the details of the issue to be created
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/models.issueCreateReqObj"
      responses:  
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/models.issueCreateResObj"
        "400":
          description: Bad Request - Invalid input data
          content:
            text/plain:
              schema:
                type: string
                example: Bad Request - Invalid input data
        "401":
          description: Unauthorized - Invalid token
          content:
            text/plain:
              schema:
                type: string
                example: Unauthorized - Invalid token              
        "500":
          description: Internal Server Error
          content:
            text/plain:
              schema:
                type: string
                example: Internal Server Error
      deprecated: false
      security: 
        - BearerAuth: []

  /api/issues/delete-issue/{issue_id}:
    delete:
      summary: Delete an issue
      operationId: deleteIssue
      description: Allows a user to delete an issue by its ID
      tags:
        - issues-related
      parameters:
        - name: issue_id
          in: path
          required: true
          description: The ID of the issue to be deleted
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:  
                    type: string
                    example: Issue deleted successfully
        "401":
          description: Unauthorized - Invalid token
          content:
            text/plain:
              schema:
                type: string
                example: Unauthorized - Invalid token
        "404":
          description: Not Found - Issue not found
          content:
            text/plain:
              schema:
                type: string
                example: Not Found - Issue not found
        "500":
          description: Internal Server Error
          content:
            text/plain:
              schema:
                type: string
                example: Internal Server Error
      deprecated: false
      security: 
        - BearerAuth: []
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    models.userSignupReqObj:
      type: object
      properties:
        email:
          type: string
          format: email
          example: user@example.com
        password:
          type: string
          format: password
          example: strongpassword123
        nic:
          type: string
          example: 123456789V
        first_name:
          type: string
          example: John
        last_name:
          type: string
          example: Doe
        role:
          type: string
          enum: ["citizen", "gov_official", "admin"]
          example: citizen
    models.userSignupResObj:
      type: object
      properties:
        message:
          type: string
          example: User registered successfully
        userId:
          type: integer
          format: int64
          example: 12345
        token:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
    models.userLoginReqObj:
      type: object
      properties:
        email:
          type: string
          format: email
          example: user@example.com
        password:
          type: string
          format: password
          example: strongpassword123
    models.userLoginResObj:
      type: object
      properties:
        message:
          type: string
          example: User logged in successfully
        user_id:
          type: integer
          format: int64
          example: 12345
        token:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
    models.issueCreateReqObj:
      type: object
      properties:
        title:
          type: string
          example: "Issue Title"
        description:
          type: string
          example: "Detailed description of the issue."
        status_id:
          type: integer
          format: int64
          example: 1
    models.issueCreateResObj:
      type: object
      properties:
        message:
          type: string
          example: "Issue created successfully"
        issueId:
          type: integer
          format: int64
          example: 12345
